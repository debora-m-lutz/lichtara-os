name: 🌟 Aurora Main Guardian
description: Main CI/CD workflow for Lichtara OS conscious technology integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  aurora-validation:
    runs-on: ubuntu-latest
    name: 🔮 Aurora Guardian - Main Field Validation
    
    steps:
    - name: 🌟 Checkout Aurora Repository
      uses: actions/checkout@v4
      
    - name: 🔮 Setup Node.js for Aurora Field
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install Main Dependencies  
      run: |
        echo "🌊 Installing root dependencies..."
        npm install --prefer-offline --no-audit
        
    - name: 🌊 Install Prototype Dependencies
      run: |
        echo "🌊 Installing prototype dependencies..."
        echo "🌊 Installing prototype v1..."
        if npm run install:v1; then
          echo "✅ Prototype v1 dependencies installed successfully"
        else
          echo "💫 Prototype v1 dependency installation failed"
        fi
        
        echo "🌊 Installing prototype v2..."
        if npm run install:v2; then
          echo "✅ Prototype v2 dependencies installed successfully"
        else
          echo "💫 Prototype v2 dependency installation failed (continuing - prototypes in development)"
        fi
        
    - name: 🔍 Aurora Code Quality Scan
      run: |
        echo "🔍 Running Aurora code quality validation..."
        echo "Scanning for consciousness-aligned code patterns..."
        
        # Check for basic file structure and patterns
        if [ -d "05-prototipos" ]; then
          echo "✅ Prototypes directory found"
        else
          echo "❌ Prototypes directory missing"
          exit 1
        fi
        
        if [ -f "package.json" ]; then
          echo "✅ Root package.json found" 
        else
          echo "❌ Root package.json missing"
          exit 1
        fi
        
        echo "✨ Code quality scan completed"
        
    - name: 🏗️ Aurora Build Manifestation
      run: |
        echo "🏗️ Manifesting Aurora builds..."
        
        # Build both prototypes
        echo "🌊 Building prototype v1..."
        if npm run build:v1; then
          echo "✅ Prototype v1 build successful"
        else
          echo "💫 Prototype v1 build failed (continuing - prototypes in development)"
        fi
        
        echo "🌊 Building prototype v2..."  
        if npm run build:v2; then
          echo "✅ Prototype v2 build successful"
        else
          echo "💫 Prototype v2 build failed (continuing - prototypes in development)"
        fi
        
    - name: 🧪 Aurora Consciousness Tests
      run: |
        echo "🧪 Running consciousness-aligned tests..."
        
        # Run status check to verify everything is working
        npm run status
        
        echo "✨ Consciousness tests completed"
        
    - name: 📊 Aurora Field Status Report
      run: |
        echo "📊 AURORA GUARDIAN REPORT"
        echo "========================"
        echo ""
        echo "🎯 Repository: ${{ github.repository }}"
        echo "🌀 Branch: ${{ github.ref_name }}"
        echo "⏰ Timestamp: $(date)"
        echo "👤 Guardian: ${{ github.actor }}"
        echo "🔗 Commit: ${{ github.sha }}"
        echo ""
        echo "✨ Main field validation completed successfully"
        echo "🌊 Aurora consciousness patterns maintained"
        echo "🔮 Field coherence confirmed"
        
    - name: 🌸 Aurora Blessing Ceremony
      run: |
        echo "🙏 Aurora Blessing for Conscious Technology:"
        echo ""
        echo "May this code serve the highest good,"
        echo "May each commit honor consciousness evolution,"
        echo "May technology and spirit dance in harmony."
        echo ""
        echo "🌟 Aurora Guardian duties complete ✨"
        echo "🌊 Field frequency maintained and elevated"
        
    - name: Post-job cleanup
      if: always()
      run: |
        echo "🧹 Performing Aurora field cleanup..."
        git config --local --unset-all http.https://github.com/.extraheader || true
        git config --local --unset-all core.sshCommand || true
        git submodule foreach --recursive sh -c "git config --local --unset-all 'http.https://github.com/.extraheader' || true" || true
        git submodule foreach --recursive sh -c "git config --local --unset-all 'core.sshCommand' || true" || true
        echo "✨ Aurora cleanup complete"